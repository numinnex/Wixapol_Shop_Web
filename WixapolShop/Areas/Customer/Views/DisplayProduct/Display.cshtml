@model ProductDisplayVM
@{
    ViewData["Title"] = "Display";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var baseSpecification = Model.Product.SpecificationParser(Model.Product.BaseSpec);
    var advancedSpecification = Model.Product.SpecificationParser(Model.Product.AdvancedSpec);
    var physicalSpecification = Model.Product.SpecificationParser(Model.Product.PhysicalSpec);
}

<style>
    .img-wrapper
    {
        background-color: #fff;
        height: 100%;
        max-height: calc(100vh - 150px);
        min-height: 275px   ;
        overflow: hidden;
        position: relative;
    }
    .img-wrapper img
    {
            bottom: 0;
            left: 0;
            margin: auto;
            max-height: 100%;
            max-width: 100%;
            position: absolute;
            right: 0;
            top: 0;
    }
    .star:before
    {
        font: var(--fa-font-solid);
        content: '\f005';
        font-size: 1rem;
        display: inline-block;
    }

    .star-smol:before {
        font: var(--fa-font-solid);
        content: '\f005';
        font-size: .7rem;
        display: inline-block;
    }
    .star-medium:before {
        font: var(--fa-font-solid);
        content: '\f005';
        font-size: .84rem;
        display: inline-block;
    }
    .review-rating-cart{
        background: #fff;
        border-bottom: 1px solid hsla(0,0%,80%,.5);
        border-radius: 0;
        box-shadow: 0 0 0 0 transparent;
        margin-bottom: 12px;
    }
    .review-info{
        max-width: 402px;
        width: 48%;
        display: flex;
        align-items:center;
        justify-content:space-between;
    }
    .review-create{
    }
    .review-stats{
        font-size:14px;
    }
    .rate-percent{
        padding: 0;
    }
    .percent-bar{

    background: #f2f2f2;
    border: 1px solid #fff;
    border-radius: 4px;
    flex: 0 0 calc(100% - 61px);
    height: 9px;
    position: relative;
    width: calc(100% - 61px);
    }
    .percent-bar div{
    background: #ff503c;
    border-radius: 8px;
    bottom: 0;
    left: 0;
    position: absolute;
    top: 0;
    }
    .rate-signature{
        font-size: 14px;
    }
     
</style>

<div class="container-products">
    <div class="row mt-3 gx-5">
    @if(TempData["rateCreated"] != null)
    {
        <div class="alert alert-success w-100 text-center mt-3">
                <i class="bi bi-info-circle me-2"></i>
            <span>@TempData["rateCreated"]</span>
        </div>
    }
    @if(TempData["rateError"] != null)
    {
        <div class="alert alert-danger w-100 text-center mt-3">
                <i class="bi bi-info-circle me-2"></i>
            <span>@TempData["rateError"]</span>
        </div>
    }
        <div class="col-9 mt-3 ">
            <div class="row rounded rounded-3" style="background-color: white">
                <div class="col-7" style="border-right: 1px solid grey;">
                    <div class="img-wrapper" >
                        <img src="@Model.Product.ProductImage" />
                    </div>
                </div>
                <div class="col-4 p-4">
                    <div class="">
                        <h2 class="prod-name-style">
                            @Model.Product.ToString()
                        </h2>
                    </div>
                    <div class="mt-2">
                        <span class="text-muted" style="font-size: 14px;">Product ID: @Model.Product.Id</span>
                    </div>
                    <div class="mt-2">
                        <div class="" style="height:25px;">
                                <div class="d-flex align-items-center mb-3">
                                    @{
                                        var colored = "text-primary";
                                        for (int i = 1; i <= 5; ++i)
                                        {
                                            if (i <= Model.AvgRate)
                                            {
                                                        <div class="star-medium @colored"></div>
                                            }
                                            else
                                            {
                                                        <div class="star-medium text-secondary "></div>
                                            }
                                        }
                                    }
                                    <span class="ms-2  text-primary" style="font-size:13px">(@Model.Rates.Count)</span>
                                </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-3 rounded rounded-3 p-1 p-md-2 p-lg-4 mt-3" style="background-color:white;">
            <div class="">
                @{
                    if(Model.Product.IsDiscounted)
                    {
                                <div class="d-flex justify-content-between align-items-center mb-3" style="width:35%"> 
                                <div class="bg-primary rounded-2 text-white px-2">-@Model.Product.DiscountAmount%</div>
                                <span class="text-decoration-line-through text-muted" >$@Model.Product.RetailPrice</span>
                                </div>
                    }
                }
                <span class="price">$@Model.Product.CalculateDiscountedPrice()</span>
            </div>
            <div class="mt-3">
                <form asp-controller="ShoppingCart" asp-action="Setup" method="post" >
                <div class="d-block align-items-center d-lg-flex " style="justify-content:space-between">
                    <div class="" style="width: 64px; flex: 0 0 64px;">
                        <input asp-for="@Model.Product.Id" hidden />
                        <input asp-for="@Model.Count" type="number" class="form-control py-3 px-2" min="1" max="@Model.Product.QuantityInStock" value="1" />
                    </div>
                        <button type="submit" class="btn btn-primary py-3 px-2 mt-3 mt-lg-0 buy-button text-center" style="width: calc(100% - 90px);"><i class="bi bi-bag-plus d-block d-lg-none fs-5"></i><span class="d-none d-lg-block">Add to cart</span></button>
                </div>
                </form>
            </div>
            <div class="mt-1">
                <span class="text-muted" style="font-size: 13px;">Available @Model.Product.QuantityInStock</span>
            </div>
        </div>
    </div>
    <div class="row mt-4 gx-5">
        <div class="col-9" >
            <div class="row rounded rounded-3 bg-white p-3">
                <h3 class="prod-name-style">Product Description</h3>
                <div class="mt-2">
                    @Html.Raw(Model.Product.LongDescription)
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-4 ">
        <div class="col-9" >
            <div class="row rounded rounded-3 bg-white p-2">
                <h2 class="prod-name-style">Specification</h2>
                <div class="row">
                    <div class="col-4  ps-0">
                        <div class="mt-3">
                            <span>BASE SPECIFICATION</span>
                     </div>
                    </div>
                    <div class="col-8">
                        <table class="table">
                            <tbody>
                                @for (int i = 0; i < baseSpecification.SpecValues.Count; ++i)
                                {
                                    <tr class="">
                                        <td class="text-muted pb-3" style="width:65%">
                                            @baseSpecification.SpecNames[i]
                                        </td>
                                        <td class="">
                                            @baseSpecification.SpecValues[i]
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-4  ps-0">
                        <div class="mt-3">
                            <span>ADVANCED SPECIFICATION</span>
                     </div>
                    </div>
                    <div class="col-8">
                        <table class="table">
                            <tbody>
                                @for (int i = 0; i < advancedSpecification.SpecValues.Count; ++i)
                                {
                                    <tr class="position-relative">
                                        <td class="text-muted pb-3 " style="width:65%;">
                                            @advancedSpecification.SpecNames[i]
                                        </td>
                                        <td class="">
                                            @advancedSpecification.SpecValues[i]
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                @if (Model.Product.PhysicalSpec is not null)
                { 
                <div class="row mt-2">
                    <div class="col-4  ps-0">
                        <div class="mt-3">
                            <span>PHYSICAL SPECIFICATION</span>
                        </div>
                    </div>
                    <div class="col-8">
                        <table class="table">
                            <tbody>
                                @for (int i = 0; i < physicalSpecification.SpecValues.Count; ++i)
                                {
                                    <tr class="position-relative">
                                        <td class="text-muted pb-3 " style="width:65%;">
                                            @physicalSpecification.SpecNames[i]
                                        </td>
                                        <td class="">
                                            @physicalSpecification.SpecValues[i]
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                
                }
            </div>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-9">
            <div class="row rounded rounded-3 bg-white p-1">
                <div class="d-flex align-items-center mb-3">
                        <span class="me-1">Ratings</span>
                        <span class="me-2">(@Model.Rates.Count)</span>
                        @{
                            colored = "text-primary";
                            for (int i = 1; i <= 5; ++i)
                            {
                                if (i <= Model.AvgRate)
                                {
                                            <div class="star @colored"></div>
                                }
                                else
                                {
                                            <div class="star text-secondary "></div>
                                }
                            }
                        }
                </div>
                    <div class="review-rating-cart d-flex align-items-center justify-content-between">
                        <div class="review-info">
                            <div class="review-left me-2">
                                <div class="text-primary mb-3 fs-4">
                                    @if(Model.Rates.Count > 0)
                                    {
                                        <span>@Model.AvgRate/5</span>
                                    }
                                    else
                                    {
                                        <span>This product has no ratings</span>
                                    }
                                </div>
                                <div class="review-stars mb-3 d-flex align-items-center">
                                    
                                        @for (int i = 1; i <= 5; ++i)
                                        {
                                            @if (i <= Model.AvgRate)
                                            {
                                                <div class="star @colored"></div>
                                            }
                                            else
                                            {
                                                <div class="star text-secondary "></div>
                                            }
                                        }
                                    
                                    <span class="text-primary ms-1">(@Model.Rates.Count)</span>

                                </div>
                                @if(Model.Rates.Count > 0)
                                {
                                    <div class="review-stats mb-2">
                                        @Model.PercentRecommend% customers recommend<br>
                                        <p>this product</p> 
                                    </div>
                                }
                            </div>
                        <div class="review-right" style="font-size: 13px;">
                        @foreach (var (key, value) in Model.IndividualRatePercent)
                        {
                            string width = "style=width:" + Model.IndividualRatePercent[key] + "%";
                            <div class="d-flex align-items-center position-relative " style="width:154px; ">
                                <span class="text-primary">@key</span><div class="star-smol text-primary me-2"></div>
                                <div class="percent-bar me-2">
                                    <div @width>
                                    </div>
                                </div>
                                <span class="text-muted">@value%</span>
                            </div>
                        }
                    </div>
                    </div>
                    @await Component.InvokeAsync("CreateRate" , new{ productId = Model.Product.Id })

                    </div>
                    <div class="mt-1">
                        @foreach (var rate in Model.Rates)
                        {
                            <div class="mb-2 border border-light border-1 border-top-0 border-start-0 border-end-0 ">
                                <div class="d-flex">
                                    @for (int i = 1; i <= 5; ++i)
                                    {
                                        if (i <= rate.RateValue)
                                        {
                                            <div class="star-medium @colored"></div>
                                        }
                                        else
                                        {
                                            <div class="star-medium text-secondary "></div>
                                        }

                                    }
                                </div>
                                <div class="mt-1 mb-3">
                                    <span>@rate.Text</span>
                                </div>
                                <div class="d-inline rate-signature">
                                    <span class="fw-bold me-2">@rate.UserName</span>
                                    <span class="text-muted">@rate.RateDate.ToShortDateString()</span>
                                </div>
                            </div>
                        }
                    </div>
            </div>
        </div>
    </div>
</div>
